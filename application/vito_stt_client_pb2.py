# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: vito-stt-client.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'vito-stt-client.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15vito-stt-client.proto\x12\x0eonline_decoder\"y\n\x0e\x44\x65\x63oderRequest\x12\x39\n\x10streaming_config\x18\x01 \x01(\x0b\x32\x1d.online_decoder.DecoderConfigH\x00\x12\x17\n\raudio_content\x18\x02 \x01(\x0cH\x00\x42\x13\n\x11streaming_request\"\x99\x02\n\x0f\x44\x65\x63oderResponse\x12\r\n\x05\x65rror\x18\x01 \x01(\x08\x12;\n\x07results\x18\x02 \x03(\x0b\x32*.online_decoder.StreamingRecognitionResult\x12J\n\x11speech_event_type\x18\x04 \x01(\x0e\x32/.online_decoder.DecoderResponse.SpeechEventType\"n\n\x0fSpeechEventType\x12\x1c\n\x18SPEECH_EVENT_UNSPECIFIED\x10\x00\x12\x1b\n\x17\x45ND_OF_SINGLE_UTTERANCE\x10\x01\x12\x10\n\x0cSTART_OF_VAD\x10\x02\x12\x0e\n\nEND_OF_VAD\x10\x03\"\xa9\x01\n\x1aStreamingRecognitionResult\x12\x42\n\x0c\x61lternatives\x18\x01 \x03(\x0b\x32,.online_decoder.SpeechRecognitionAlternative\x12\x10\n\x08is_final\x18\x02 \x01(\x08\x12\x11\n\tstability\x18\x03 \x01(\x02\x12\x10\n\x08\x64uration\x18\x04 \x01(\x05\x12\x10\n\x08start_at\x18\x05 \x01(\x05\"i\n\x1cSpeechRecognitionAlternative\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12\'\n\x05words\x18\x03 \x03(\x0b\x32\x18.online_decoder.WordInfo\"e\n\x08WordInfo\x12\x10\n\x08start_at\x18\x01 \x01(\x03\x12\x10\n\x08\x64uration\x18\x02 \x01(\x03\x12\x0c\n\x04text\x18\x03 \x01(\t\x12\x12\n\nconfidence\x18\x04 \x01(\x02\x12\x13\n\x0bspeaker_tag\x18\x05 \x01(\x05\"\xbf\x04\n\rDecoderConfig\x12\x13\n\x0bsample_rate\x18\x01 \x01(\x05\x12=\n\x08\x65ncoding\x18\x02 \x01(\x0e\x32+.online_decoder.DecoderConfig.AudioEncoding\x12\x17\n\nmodel_name\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07use_itn\x18\x05 \x01(\x08H\x01\x88\x01\x01\x12\"\n\x15use_disfluency_filter\x18\r \x01(\x08H\x02\x88\x01\x01\x12!\n\x14use_profanity_filter\x18\x0e \x01(\x08H\x03\x88\x01\x01\x12?\n\rstream_config\x18\x16 \x01(\x0b\x32#.online_decoder.RuntimeStreamConfigH\x04\x88\x01\x01\x12\x10\n\x08keywords\x18\x17 \x03(\t\x12\x15\n\x08language\x18\x19 \x01(\tH\x05\x88\x01\x01\"\x8c\x01\n\rAudioEncoding\x12\x18\n\x14\x45NCODING_UNSPECIFIED\x10\x00\x12\x0c\n\x08LINEAR16\x10\x01\x12\x07\n\x03WAV\x10\x02\x12\x08\n\x04\x46LAC\x10\x03\x12\t\n\x05MULAW\x10\x04\x12\x08\n\x04\x41LAW\x10\x05\x12\x07\n\x03\x41MR\x10\x06\x12\n\n\x06\x41MR_WB\x10\x07\x12\x0c\n\x08OGG_OPUS\x10\x08\x12\x08\n\x04OPUS\x10\tB\r\n\x0b_model_nameB\n\n\x08_use_itnB\x18\n\x16_use_disfluency_filterB\x17\n\x15_use_profanity_filterB\x10\n\x0e_stream_configB\x0b\n\t_language\"q\n\x13RuntimeStreamConfig\x12\x1f\n\x12max_utter_duration\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x15\n\x08\x65pd_time\x18\x03 \x01(\x02H\x01\x88\x01\x01\x42\x15\n\x13_max_utter_durationB\x0b\n\t_epd_time2`\n\rOnlineDecoder\x12O\n\x06\x44\x65\x63ode\x12\x1e.online_decoder.DecoderRequest\x1a\x1f.online_decoder.DecoderResponse\"\x00(\x01\x30\x01\x42I\n\x12\x61i.vito.openapi.v1B\tVitoProtoP\x01Z&github.com/vito-ai/go-genproto/stt;sttb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'vito_stt_client_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\022ai.vito.openapi.v1B\tVitoProtoP\001Z&github.com/vito-ai/go-genproto/stt;stt'
  _globals['_DECODERREQUEST']._serialized_start=41
  _globals['_DECODERREQUEST']._serialized_end=162
  _globals['_DECODERRESPONSE']._serialized_start=165
  _globals['_DECODERRESPONSE']._serialized_end=446
  _globals['_DECODERRESPONSE_SPEECHEVENTTYPE']._serialized_start=336
  _globals['_DECODERRESPONSE_SPEECHEVENTTYPE']._serialized_end=446
  _globals['_STREAMINGRECOGNITIONRESULT']._serialized_start=449
  _globals['_STREAMINGRECOGNITIONRESULT']._serialized_end=618
  _globals['_SPEECHRECOGNITIONALTERNATIVE']._serialized_start=620
  _globals['_SPEECHRECOGNITIONALTERNATIVE']._serialized_end=725
  _globals['_WORDINFO']._serialized_start=727
  _globals['_WORDINFO']._serialized_end=828
  _globals['_DECODERCONFIG']._serialized_start=831
  _globals['_DECODERCONFIG']._serialized_end=1406
  _globals['_DECODERCONFIG_AUDIOENCODING']._serialized_start=1157
  _globals['_DECODERCONFIG_AUDIOENCODING']._serialized_end=1297
  _globals['_RUNTIMESTREAMCONFIG']._serialized_start=1408
  _globals['_RUNTIMESTREAMCONFIG']._serialized_end=1521
  _globals['_ONLINEDECODER']._serialized_start=1523
  _globals['_ONLINEDECODER']._serialized_end=1619
# @@protoc_insertion_point(module_scope)
